@{
    ViewData["Title"] = "Giỏ hàng";
    var idTable = ViewData["IdTable"] ?? "";
    var restaurantId = ViewData["RestaurantId"] ?? "";
}

<head>
    <link rel="stylesheet" href="~/css/cart-detail.css" asp-append-version="true" />
</head>

<div class="cart-body d-flex flex-column justify-content-between">
    <div id="cartItemsContainer" class="cart-items mb-4">
        @* Item cart trong vùng này *@
    </div>

    <div class="cart-summary px-0" style="padding-top: 12px;">
        @if (!string.IsNullOrEmpty(idTable.ToString()) && !string.IsNullOrEmpty(restaurantId.ToString()))
        {
            <vc:promotion restaurant-id=" @restaurantId" />
        }

        <div class="cart-summary p-0 mb-2 mt-3">
            <div class="justify-content-between mb-1 mt-3" id="originalPriceRow" style="display: none;">
                <span>Giá gốc:</span>
                <span class="text-muted" id="originalPrice" style="text-decoration: line-through;">0đ</span>
            </div>
            <div class="justify-content-between mb-1" id="discountRow" style="display: none;">
                <span>Đã giảm:</span>
                <span class="text-success" id="discountAmount">0đ</span>
            </div>
            <div class="d-flex justify-content-between align-items-center mt-3">
                <h5 class="mb-0 fw-bold">Tổng tiền:</h5>
                <h5 id="cartTotal" class="mb-0 text-danger" style="font-weight: bold; font-size: 20px;">0đ</h5>
            </div>
        </div>

        @if (!string.IsNullOrEmpty(idTable.ToString()) && !string.IsNullOrEmpty(restaurantId.ToString()))
        {
            <vc:payment-method id-table="@idTable" restaurant-id="@restaurantId" />
        }
    </div>
</div>

@section Scripts {
    <script>
        const id_table = '@idTable';
        const restaurant_id = '@restaurantId';


        @* Hàm fetch API *@
            async function apiFetch(url, method = 'GET', data = null, headers = { 'Content-Type': 'application/json' }) {
                const options = {
                    method,
                    headers
                };
                if (data) {
                    options.body = JSON.stringify(data);
                }
                console.log('data', data)
                const response = await fetch(url, options);
                if (!response.ok) {
                    throw new Error(`API error: ${response.status}`);
                }
                return response.json();
            }

        @* Hàm load giỏ hàng *@
            async function loadCartItems() {
                const cartItemsContainer = document.getElementById('cartItemsContainer');
                const checkoutBtn = document.getElementById('checkoutBtn');

                const payload = {
                    id_table: id_table,
                    id_restaurant: restaurant_id
                };

                const response = await apiFetch('https://jollicowfe-production.up.railway.app/api/admin/carts/filter', 'POST', payload)
                const cartItems = response.carts || [];
                console.log("cartItems", cartItems);
                if (cartItems.length === 0) {
                    cartItemsContainer.innerHTML = '<div class="text-center py-4">Giỏ hàng đang trống</div>';
                    if (checkoutBtn) checkoutBtn.disabled = true;
                    document.getElementById('cartTotal').textContent = '0đ';
                    return;
                }


                if (checkoutBtn) checkoutBtn.disabled = false;
                cartItemsContainer.innerHTML = cartItems.map((item, index) => {
                    return `
                                                                                                                                                                                                                                                                        <div class="cart-item">
                                                                                                                                                                                                                                                                            <button class="btn btn-sm d-flex justify-content-center align-items-center btn-outline-danger remove-btn p-0 m-0 border-1"
                                                                                                                                                                                                                                                                                    style="width: 24px; height: 24px; align-self: flex-end; border-radius: 6px" onclick="deleteItem('${item.id}')">
                                                                                                                                                                                                                                                                                    <i class="bi bi-trash"></i>
                                                                                                                                                                                                                                                                            </button>
                                                                                                                                                                                                                                                                            <div class="cart-items-detail d-flex flex-row" style="gap: 12px">
                                                                                                                                                                                                                                                                                <div class="cart-item-image">
                                                                                                                                                                                                                                                                                    <img src="${item.image}" alt="${item.name}" style="width: 80px; height: 80px; border-radius: 8px; object-fit: cover;">
                                                                                                                                                                                                                                                                                </div>
                                                                                                                                                                                                                                                                                <div class="cart-item-container">
                                                                                                                                                                                                                                                                                    <div class="cart-item-details">
                                                                                                                                                                                                                                                                                        <div class="cart-item-name">${item.name}</div>
                                                                                                                                                                                                                                                                                        <div class="cart-item-options">
                                                                                                                                                                                                                                                                                            ${item.toppings && item.toppings.length > 0 ? `Topping: ${item.toppings.join(', ')}` : ''}
                                                                                                                                                                                                                                                                                        </div>
                                                                                                                                                                                                                                                                                    </div>
                                                                                                                                                                                                                                                                                    <div class="d-flex flex-row justify-content-between align-items-center">
                                                                                                                                                                                                                                                                                        <div class="cart-item-quantity">
                                                                                                                                                                                                                                                                                            <button class="quantity-btn" onclick="updateQuantity(${index}, -1)">-</button>
                                                                                                                                                                                                                                                                                            <input type="number" class="quantity-input" style="color: #5F6368; font-size:12px" value="${item.quantity}"
                                                                                                                                                                                                                                                                                                min="1" max="99" onchange="updateQuantity(${index}, 0, this.value)">
                                                                                                                                                                                                                                                                                                <button class="quantity-btn" onclick="updateQuantity(${index}, 1)">+</button>
                                                                                                                                                                                                                                                                                        </div>
                                                                                                                                                                                                                                                                                        <div class="cart-item-price">${(item.price * item.quantity).toLocaleString('vi-VN')}đ</div>
                                                                                                                                                                                                                                                                                    </div>
                                                                                                                                                                                                                                                                                </div>
                                                                                                                                                                                                                                                                            </div>
                                                                                                                                                                                                                                                                        </div>
                                                                                                                                                                                                                                                                            `
                }).join('');


                // Update total
                updateCartTotal(cartItems);
            }

        @* Hàm update số lượng *@
            function updateQuantity(index, change, newValue) {
                const cartItems = JSON.parse(localStorage.getItem('cartItems') || '[]');

                if (newValue !== undefined) {
                    cartItems[index].quantity = parseInt(newValue) || 1;
                } else {
                    cartItems[index].quantity += change;
                }

                if (cartItems[index].quantity < 1) cartItems[index].quantity = 1;
                if (cartItems[index].quantity > 99) cartItems[index].quantity = 99;

                localStorage.setItem('cartItems', JSON.stringify(cartItems));
                loadCartItems();
            }

        @* Hàm xóa giỏ hàng *@
            function deleteItem(itemId) {
                if (confirm('Bạn có chắc chắn muốn xóa giỏ hàng?')) {
                    fetch('https://jollicowfe-production.up.railway.app/api/admin/carts/' + itemId, {
                        method: 'DELETE'
                    })
                        .then(res => {
                            if (res.ok) {
                                // reload lại trang, hoặc update giao diện
                                location.reload();
                            } else {
                                alert('Xoá thất bại!');
                            }
                        });
                }
            }

        @* Hàm update tổng tiền *@
            function updateCartTotal(cartItems) {
                if (!cartItems || cartItems.length === 0) {
                    document.getElementById('cartTotal').textContent = '0đ';
                    document.getElementById('originalPrice').style.display = 'none';
                    return;
                }

                const total = cartItems.reduce((sum, item) => sum + ((parseFloat(item.price) || 0) * item.quantity), 0);
                const voucherData = JSON.parse(localStorage.getItem('voucher') || null);

                if (voucherData) {
                    const { percent, minPrice, maxDiscount } = voucherData;
                    const cartTotalElement = document.getElementById('cartTotal');
                    const originalPriceElement = document.getElementById('originalPrice');
                    const originalPriceRowElement = document.getElementById('originalPriceRow');
                    const discountAmountElement = document.getElementById('discountAmount');
                    const discountRowElement = document.getElementById('discountRow');

                    if (percent > 0) {
                        var discounted = Math.round(total * (1 - percent / 100));

                        if (total - discounted >= maxDiscount) {
                            discounted = total - maxDiscount;
                        }

                        cartTotalElement.textContent = discounted.toLocaleString('vi-VN') + 'đ';
                        originalPriceElement.style.display = 'flex';
                        originalPriceRowElement.style.display = 'flex';
                        originalPriceElement.textContent = total.toLocaleString('vi-VN') + 'đ';

                        discountAmountElement.style.display = 'flex';
                        discountRowElement.style.display = 'flex';
                        discountAmountElement.textContent = (total - discounted).toLocaleString('vi-VN') + 'đ';
                    } else {
                        cartTotalElement.textContent = total.toLocaleString('vi-VN') + 'đ';
                        originalPriceElement.style.display = 'none';
                        originalPriceRowElement.style.display = 'none';
                        discountAmountElement.style.display = 'none';
                        discountRowElement.style.display = 'none';
                    }
                }
            }


        @* Hàm đặt món *@
            function checkout() {
                const cartItems = JSON.parse(localStorage.getItem('cartItems') || '[]');

                if (cartItems.length === 0) {
                    alert('Giỏ hàng trống!');
                    return;
                }

                // Đây là chỗ để gọi API gửi order về server (nếu có)
                alert('Đặt món thành công!');
                localStorage.removeItem('cartItems');
                loadCartItems();
            }

        @* Hàm xóa món *@
            function removeItem(index) {
                if (confirm('Bạn có chắc chắn muốn xóa món này khỏi giỏ hàng?')) {
                    const cartItems = JSON.parse(localStorage.getItem('cartItems') || '[]');
                    cartItems.splice(index, 1);
                    localStorage.setItem('cartItems', JSON.stringify(cartItems));
                    loadCartItems();
                }
            }
        document.addEventListener('DOMContentLoaded', loadCartItems);

        window.addEventListener("voucherApplied", () => {
            loadCartItems();
        });

        window.addEventListener('load', () => {
            const isCheckout = sessionStorage.getItem('checkoutInProgress');
            if (!isCheckout) {
                localStorage.removeItem('voucher');
            } else {
                sessionStorage.removeItem('checkoutInProgress');
            }
        });
    </script>
}
